name: Build and Package

on: [push]

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x86, x64]
        configuration: [Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0

      - name: Download and Setup VPinMAME
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/freezy/dmd-extensions/files/4073824/VPinMAME31_Minimal.zip" -OutFile vpm.zip
          Expand-Archive vpm.zip -DestinationPath vpm
          cd vpm
          regsvr32 /s VPinMAME.dll
          cd ..
          dir

      - name: Restore NuGet packages
        run: nuget restore DmdExtensions.sln
        
      - name: Restore DLLExport dependency
        run: .\DllExport -action Restore -sln-file DmdExtensions.sln

      - name: Update version info
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF.StartsWith("refs/tags/")) { $env:GITHUB_REF_NAME } else { $env:GITHUB_SHA.Substring(0, 7) }
          $content = Get-Content VersionAssemblyInfo.cs
          $content = $content -replace '(?<=AssemblyVersion\(")[^"]*', $version
          $content = $content -replace '(?<=AssemblyFileVersion\(")[^"]*', $version
          Set-Content VersionAssemblyInfo.cs $content

      - name: Build
        run: msbuild -t:rebuild /p:Platform=${{ matrix.platform }} /p:Configuration=${{ matrix.configuration }} DmdExtensions.sln
      
      - name: Build installer
        run: |
          echo "Building with wix goes here"
          # Add actual WiX build command here

      - name: Generate zip bundle
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF.StartsWith("refs/tags/")) { $env:GITHUB_REF_NAME } else { $env:GITHUB_SHA.Substring(0, 7) }
          $zipArchive = "$env:GITHUB_WORKSPACE\Installer\Builds\dmdext-$version-${{ matrix.platform }}-${{ matrix.configuration }}.zip"
          New-Item -ItemType Directory -Force -Path "$env:GITHUB_WORKSPACE\Installer\Builds"
          
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\Console\bin\${{ matrix.platform }}\${{ matrix.configuration }}\dmdext.exe" -DestinationPath $zipArchive -Force
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\Console\bin\${{ matrix.platform }}\${{ matrix.configuration }}\dmdext.log.config" -Update -DestinationPath $zipArchive
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\Console\ProPinballSlave.bat" -Update -DestinationPath $zipArchive

          $dllSuffix = if ('${{ matrix.platform }}' -eq 'x64') { '64' } else { '' }
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\PinMameDevice\bin\${{ matrix.platform }}\${{ matrix.configuration }}\DmdDevice$dllSuffix.dll" -Update -DestinationPath $zipArchive
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\PinMameDevice\bin\${{ matrix.platform }}\${{ matrix.configuration }}\DmdDevice.log.config" -Update -DestinationPath $zipArchive
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\PinMameDevice\DmdDevice.ini" -Update -DestinationPath $zipArchive
          
          Rename-Item "$env:GITHUB_WORKSPACE\PinMameDevice\data" "$env:GITHUB_WORKSPACE\PinMameDevice\dmdext"
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\PinMameDevice\dmdext" -Update -DestinationPath $zipArchive
          
          Rename-Item "$env:GITHUB_WORKSPACE\PinMameDevice\dmdext" "$env:GITHUB_WORKSPACE\PinMameDevice\data"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dmdext-${{ matrix.platform }}-${{ matrix.configuration }}
          path: ${{ github.workspace }}\Installer\Builds\*.zip
          retention-days: 90
          if-no-files-found: error
