<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<Platforms>x86;x64</Platforms>
		<OutputType>Library</OutputType>
		<RootNamespace>PinMameDevice</RootNamespace>
		<AssemblyName>DmdDevice</AssemblyName>
		<ProjectGuid>{3E9138DA-A0A5-449E-BFD2-965E38B9182E}</ProjectGuid>
		<AppDesignerFolder>Properties</AppDesignerFolder>
		<FileAlignment>512</FileAlignment>
		<UseWPF>true</UseWPF>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	</PropertyGroup>
	<ItemGroup>
		<ProjectReference Include="..\LibDmd\LibDmd.csproj" />
		<PackageReference Include="Costura.Fody" Version="5.3.0" PrivateAssets="all" />
		<PackageReference Include="Fody" Version="6.5.1" PrivateAssets="all" />
		<PackageReference Include="DllExport">
			<Version>1.7.4</Version>
			<Visible>false</Visible>
			<Wz>1</Wz>
		</PackageReference>
	</ItemGroup>
	<ItemGroup>
		<Compile Include="..\VersionAssemblyInfo.cs" Link="Properties\VersionAssemblyInfo.cs" />
		<Content Include="DmdDevice.log.config" CopyToOutputDirectory="Always" />
		<None Include="DmdDevice.ini" />
		<None Include="README.md" />
		<!-- <Content Include="FodyWeavers.xml" /> -->
	</ItemGroup>
	<PropertyGroup>
		<DllExportIdent>91FC0343-29D4-45DB-97A1-458B52834E48</DllExportIdent>
		<DllExportMetaLibName>DllExport.dll</DllExportMetaLibName>
		<DllExportNamespace>PinMameDevice</DllExportNamespace>
		<DllExportDDNSCecil>true</DllExportDDNSCecil>
		<DllExportSkipOnAnyCpu>false</DllExportSkipOnAnyCpu>
		<DllExportPlatform>Auto</DllExportPlatform>
		<DllExportOrdinalsBase>1</DllExportOrdinalsBase>
		<DllExportGenExpLib>false</DllExportGenExpLib>
		<DllExportOurILAsm>false</DllExportOurILAsm>
		<DllExportSysObjRebase>false</DllExportSysObjRebase>
		<DllExportLeaveIntermediateFiles>false</DllExportLeaveIntermediateFiles>
		<DllExportTimeout>30000</DllExportTimeout>
		<DllExportPeCheck>2</DllExportPeCheck>
		<DllExportPatches>0</DllExportPatches>
		<DllExportPreProcType>0</DllExportPreProcType>
		<DllExportPostProcType>0</DllExportPostProcType>
	</PropertyGroup>
	<ImportGroup Label=".NET DllExport">
		<Import Project="$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets" Condition="Exists($([MSBuild]::Escape('$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets')))" Label="8337224c9ad9e356" />
	</ImportGroup>
	<Target Name="DllExportRestorePkg" BeforeTargets="PrepareForBuild">
		<Error Condition="!Exists('$(SolutionDir)DllExport.bat')" Text="DllExport.bat is not found. Path: '$(SolutionDir)' - https://github.com/3F/DllExport" />
		<Exec Condition="('$(DllExportModImported)' != 'true' Or !Exists('$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets')) And Exists('$(SolutionDir)DllExport.bat')" Command=".\DllExport.bat  -action Restore" WorkingDirectory="$(SolutionDir)" />
		<MSBuild Condition="'$(DllExportModImported)' != 'true'" Projects="$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets" Targets="DllExportMetaXBaseTarget" Properties="TargetFramework=$(TargetFramework)">
			<Output TaskParameter="TargetOutputs" PropertyName="DllExportMetaXBase" />
		</MSBuild>
		<ItemGroup>
		<Reference Include="DllExport, PublicKeyToken=8337224c9ad9e356">
			<HintPath>$(SolutionDir)packages\DllExport.1.7.4\gcache\$(DllExportMetaXBase)\$(DllExportNamespace)\$(DllExportMetaLibName)</HintPath>
			<Private>False</Private>
			<SpecificVersion>False</SpecificVersion>
		</Reference>
		</ItemGroup>
	</Target>
	<Target Name="DllExportRPkgDynamicImport" BeforeTargets="PostBuildEvent" DependsOnTargets="GetFrameworkPaths" Condition="'$(DllExportModImported)' != 'true' And '$(DllExportRPkgDyn)' != 'false'">
		<MSBuild BuildInParallel="true" UseResultsCache="true" Projects="$(MSBuildProjectFullPath)" Properties="DllExportRPkgDyn=true" Targets="Build" />
	</Target>
	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
	  <Exec Command="if &quot;$(Platform)&quot;==&quot;x64&quot; (&#xD;&#xA;  copy /Y &quot;$(TargetDir)$(TargetName).dll&quot; &quot;$(TargetDir)$(TargetName)64.dll&quot;&#xD;&#xA;)&#xD;&#xA;if not exist &quot;%25VPM_HOME%25&quot; goto done&#xD;&#xA;&#xD;&#xA;if &quot;$(Platform)&quot;==&quot;x64&quot; (&#xD;&#xA;  echo Copying $(TargetName).dll to %25VPM_HOME%25\$(TargetName)64.dll...&#xD;&#xA;  copy /Y &quot;$(TargetDir)$(TargetName).dll&quot; &quot;%25VPM_HOME%25\$(TargetName)64.dll&quot;&#xD;&#xA;) else (&#xD;&#xA;  echo Copying $(TargetName).dll to %25VPM_HOME%25...&#xD;&#xA;  copy /Y &quot;$(TargetDir)$(TargetName).dll&quot; &quot;%25VPM_HOME%25&quot;&#xD;&#xA;  copy /Y &quot;$(TargetDir)$(TargetName).pdb&quot; &quot;%25VPM_HOME%25&quot;&#xD;&#xA;  copy /Y &quot;$(TargetDir)LibDMD.dll&quot; &quot;%25VPM_HOME%25&quot;&#xD;&#xA; copy /Y &quot;$(TargetDir)LibDMD.pdb&quot; &quot;%25VPM_HOME%25&quot;&#xD;&#xA;)&#xD;&#xA;echo Copying DmdDevice.log.config to %25VPM_HOME%25...&#xD;&#xA;copy /Y &quot;$(TargetDir)DmdDevice.log.config&quot; &quot;%25VPM_HOME%25&quot;&#xD;&#xA;:done" />
	</Target>
</Project>